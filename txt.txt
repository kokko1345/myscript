local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Kokko hub", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

--[[
Name = <string> - The name of the UI.
HidePremium = <bool> - Whether or not the user details shows Premium status or not.
SaveConfig = <bool> - Toggles the config saving in the UI.
ConfigFolder = <string> - The name of the folder where the configs are saved.
IntroEnabled = <bool> - Whether or not to show the intro animation.
IntroText = <string> - Text to show in the intro animation.
IntroIcon = <string> - URL to the image you want to use in the intro animation.
Icon = <string> - URL to the image you want displayed on the window.
CloseCallback = <function> - Function to execute when the window is closed.
]]
local Tab = Window:MakeTab({
	Name = "Tools",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]
local Section = Tab:AddSection({
	Name = "Section1"
})

--[[
Name = <string> - The name of the section.
]]
OrionLib:MakeNotification({
	Name = "Script!",
	Content = "Made by kokko",
	Image = "rbxassetid://4483345998",
	Time = 9
})

--[[
Title = <string> - The title of the notification.
Content = <string> - The content of the notification.
Image = <string> - The icon of the notification.
Time = <number> - The duration of the notfication.
]]
OrionLib:MakeNotification({
	Name = "UI!",
	Content = "credits to orion for the libary",
	Image = "rbxassetid://4483345998",
	Time = 10
})

--[[
Title = <string> - The title of the notification.
Content = <string> - The content of the notification.
Image = <string> - The icon of the notification.
Time = <number> - The duration of the notfication.
]]
Tab:AddButton({
	Name = "Noclip/fly tool!",
	Callback = function()
      	local x = Instance.new("HopperBin")
x.Parent = game.Players.LocalPlayer.Backpack
x.BinType = "Script"
x.Name = "NoClip"

local c = workspace.CurrentCamera
local player = game.Players.LocalPlayer
local userInput = game:GetService("UserInputService")
local rs = game:GetService("RunService")
local starterPlayer = game:GetService("StarterPlayer")

local selected = false
local speed = 60
local lastUpdate = 0

function getNextMovement(deltaTime)
local nextMove = Vector3.new()
-- Left/Right
if userInput:IsKeyDown("A") or userInput:IsKeyDown("Left") then
nextMove = Vector3.new(-1,0,0)
elseif userInput:IsKeyDown("D") or userInput:IsKeyDown("Right") then
nextMove = Vector3.new(1,0,0)
end
-- Forward/Back
if userInput:IsKeyDown("W") or userInput:IsKeyDown("Up") then
nextMove = nextMove + Vector3.new(0,0,-1)
elseif userInput:IsKeyDown("S") or userInput:IsKeyDown("Down") then
nextMove = nextMove + Vector3.new(0,0,1)
end
-- Up/Down
if userInput:IsKeyDown("Space") then
nextMove = nextMove + Vector3.new(0,1,0)
elseif userInput:IsKeyDown("LeftControl") then
nextMove = nextMove + Vector3.new(0,-1,0)
end
return CFrame.new( nextMove * (speed * deltaTime) )
end

function onSelected()
local char = player.Character
if char then
local humanoid = char:WaitForChild("Humanoid")
local root = char:WaitForChild("HumanoidRootPart")
currentPos = root.Position
selected = true
root.Anchored = true
lastUpdate = tick()
humanoid.PlatformStand = true
while selected do
wait()
local delta = tick()-lastUpdate
local look = (c.Focus.p-c.CoordinateFrame.p).unit
local move = getNextMovement(delta)
local pos = root.Position
root.CFrame = CFrame.new(pos,pos+look) * move
lastUpdate = tick()
end
root.Anchored = false
root.Velocity = Vector3.new()
humanoid.PlatformStand = false
end
end

function onDeselected()
selected = false
end

x.Selected:connect(onSelected)
x.Deselected:connect(onDeselected)
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]
Tab:AddButton({
	Name = "TP TOOL!",
	Callback = function()
   mouse = game.Players.LocalPlayer:GetMouse()
tool = Instance.new("Tool")
tool.RequiresHandle = false
tool.Name = "TP TOOL"
tool.Activated:connect(function()
local pos = mouse.Hit+Vector3.new(0,2.5,0)
pos = CFrame.new(pos.X,pos.Y,pos.Z)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
end)
tool.Parent = game.Players.LocalPlayer.Backpack
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]
local Tab = Window:MakeTab({
	Name = "Character stuff",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddSlider({
	Name = "Speed Changer",
	Min = 16,
	Max = 1000,
	Default = 5,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Speed Power",
	Callback = function(Value)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
	end    
})

--[[
Name = <string> - The name of the slider.
Min = <number> - The minimal value of the slider.
Max = <number> - The maxium value of the slider.
Increment = <number> - How much the slider will change value when dragging.
Default = <number> - The default value of the slider.
ValueName = <string> - The text after the value number.
Callback = <function> - The function of the slider.
]]
Tab:AddSlider({
	Name = "Jump Changer",
	Min = 16,
	Max = 1000,
	Default = 5,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Jump Power",
	Callback = function(Value)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
	end    
})

--[[
Name = <string> - The name of the slider.
Min = <number> - The minimal value of the slider.
Max = <number> - The maxium value of the slider.
Increment = <number> - How much the slider will change value when dragging.
Default = <number> - The default value of the slider.
ValueName = <string> - The text after the value number.
Callback = <function> - The function of the slider.
]]
local Tab = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Kokko hub", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})

--[[
Name = <string> - The name of the UI.
HidePremium = <bool> - Whether or not the user details shows Premium status or not.
SaveConfig = <bool> - Toggles the config saving in the UI.
ConfigFolder = <string> - The name of the folder where the configs are saved.
IntroEnabled = <bool> - Whether or not to show the intro animation.
IntroText = <string> - Text to show in the intro animation.
IntroIcon = <string> - URL to the image you want to use in the intro animation.
Icon = <string> - URL to the image you want displayed on the window.
CloseCallback = <function> - Function to execute when the window is closed.
]]
local Tab = Window:MakeTab({
	Name = "Tools",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]
local Section = Tab:AddSection({
	Name = "Section1"
})

--[[
Name = <string> - The name of the section.
]]
OrionLib:MakeNotification({
	Name = "Script!",
	Content = "Made by kokko",
	Image = "rbxassetid://4483345998",
	Time = 9
})

--[[
Title = <string> - The title of the notification.
Content = <string> - The content of the notification.
Image = <string> - The icon of the notification.
Time = <number> - The duration of the notfication.
]]
OrionLib:MakeNotification({
	Name = "UI!",
	Content = "credits to orion for the libary",
	Image = "rbxassetid://4483345998",
	Time = 10
})

--[[
Title = <string> - The title of the notification.
Content = <string> - The content of the notification.
Image = <string> - The icon of the notification.
Time = <number> - The duration of the notfication.
]]
Tab:AddButton({
	Name = "Noclip/fly tool!",
	Callback = function()
      	local x = Instance.new("HopperBin")
x.Parent = game.Players.LocalPlayer.Backpack
x.BinType = "Script"
x.Name = "NoClip"

local c = workspace.CurrentCamera
local player = game.Players.LocalPlayer
local userInput = game:GetService("UserInputService")
local rs = game:GetService("RunService")
local starterPlayer = game:GetService("StarterPlayer")

local selected = false
local speed = 60
local lastUpdate = 0

function getNextMovement(deltaTime)
local nextMove = Vector3.new()
-- Left/Right
if userInput:IsKeyDown("A") or userInput:IsKeyDown("Left") then
nextMove = Vector3.new(-1,0,0)
elseif userInput:IsKeyDown("D") or userInput:IsKeyDown("Right") then
nextMove = Vector3.new(1,0,0)
end
-- Forward/Back
if userInput:IsKeyDown("W") or userInput:IsKeyDown("Up") then
nextMove = nextMove + Vector3.new(0,0,-1)
elseif userInput:IsKeyDown("S") or userInput:IsKeyDown("Down") then
nextMove = nextMove + Vector3.new(0,0,1)
end
-- Up/Down
if userInput:IsKeyDown("Space") then
nextMove = nextMove + Vector3.new(0,1,0)
elseif userInput:IsKeyDown("LeftControl") then
nextMove = nextMove + Vector3.new(0,-1,0)
end
return CFrame.new( nextMove * (speed * deltaTime) )
end

function onSelected()
local char = player.Character
if char then
local humanoid = char:WaitForChild("Humanoid")
local root = char:WaitForChild("HumanoidRootPart")
currentPos = root.Position
selected = true
root.Anchored = true
lastUpdate = tick()
humanoid.PlatformStand = true
while selected do
wait()
local delta = tick()-lastUpdate
local look = (c.Focus.p-c.CoordinateFrame.p).unit
local move = getNextMovement(delta)
local pos = root.Position
root.CFrame = CFrame.new(pos,pos+look) * move
lastUpdate = tick()
end
root.Anchored = false
root.Velocity = Vector3.new()
humanoid.PlatformStand = false
end
end

function onDeselected()
selected = false
end

x.Selected:connect(onSelected)
x.Deselected:connect(onDeselected)
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]
Tab:AddButton({
	Name = "TP TOOL!",
	Callback = function()
   mouse = game.Players.LocalPlayer:GetMouse()
tool = Instance.new("Tool")
tool.RequiresHandle = false
tool.Name = "TP TOOL"
tool.Activated:connect(function()
local pos = mouse.Hit+Vector3.new(0,2.5,0)
pos = CFrame.new(pos.X,pos.Y,pos.Z)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
end)
tool.Parent = game.Players.LocalPlayer.Backpack
  	end    
})

--[[
Name = <string> - The name of the button.
Callback = <function> - The function of the button.
]]
local Tab = Window:MakeTab({
	Name = "Character stuff",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]

Tab:AddSlider({
	Name = "Speed Changer",
	Min = 16,
	Max = 1000,
	Default = 5,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Speed Power",
	Callback = function(Value)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
	end    
})

--[[
Name = <string> - The name of the slider.
Min = <number> - The minimal value of the slider.
Max = <number> - The maxium value of the slider.
Increment = <number> - How much the slider will change value when dragging.
Default = <number> - The default value of the slider.
ValueName = <string> - The text after the value number.
Callback = <function> - The function of the slider.
]]
Tab:AddSlider({
	Name = "Jump Changer",
	Min = 16,
	Max = 1000,
	Default = 5,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Jump Power",
	Callback = function(Value)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
	end    
})

--[[
Name = <string> - The name of the slider.
Min = <number> - The minimal value of the slider.
Max = <number> - The maxium value of the slider.
Increment = <number> - How much the slider will change value when dragging.
Default = <number> - The default value of the slider.
ValueName = <string> - The text after the value number.
Callback = <function> - The function of the slider.
]]
local Tab = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

--[[
Name = <string> - The name of the tab.
Icon = <string> - The icon of the tab.
PremiumOnly = <bool> - Makes the tab accessible to Sirus Premium users only.
]]
Tab:AddButton({
	Name = "TP GUI",
	Callback = function()
loadstring(game:HttpGet("https://pastebin.com/raw/H7UXP01e", true))()
	end
})
OrionLib:Init()
OrionLib:Destroy()
